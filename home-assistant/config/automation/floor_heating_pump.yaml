- alias: "Floor Heating Pump toggle"
  id: floor-heating-pump-toggle
  trigger:
    - platform: template
      alias: "Temp rose sufficiently to turn off"
      value_template: >-
        # High default ensures it it doesn't trigger if sensor is unavailable
        {{ states('sensor.climate_living_room_temperature') | float(100) >
           (states('input_number.living_room_temperature_target') | float +
            states('input_number.living_room_temperature_turn_off_above_target_plus_this') | float
           )
        }}
    - platform: template
      alias: "Temp dropped sufficiently to turn on"
      value_template: >-
        # Low default ensures it doesn't trigger if sensor is unavailable
        {{ states('sensor.climate_living_room_temperature') | float(0) <
           (states('input_number.living_room_temperature_target') | float +
            states('input_number.living_room_temperature_turn_on_below_target_plus_this') | float
           )
        }}
    # Fallback trigger, consider removing if there is sufficient comfort that temp-based triggers
    # do the job.
    # Used by to be every minute, but it led to a lot of spam in the Logbook.
    - platform: time_pattern
      minutes: 0
    - platform: homeassistant
      event: start
  variables:
    # The default of 0 makes the pump always go on if the sensor is dead, which is useful to
    # ensure continuation of service:
    temp: >-
      {{ states('sensor.climate_living_room_temperature') | float(0) }}
    target: >-
      {{ states('input_number.living_room_temperature_target') | float }}
    turn_on_below: >-
      {{ target + states('input_number.living_room_temperature_turn_on_below_target_plus_this') | float }}
    turn_off_above: >-
      {{ target + states('input_number.living_room_temperature_turn_off_above_target_plus_this') | float }}
    desired_state: >-
      {{ "on" if (temp | float(0)) < (turn_on_below | float(0)) else
         "off" if (temp | float(0)) > (turn_off_above | float(0)) else
         "undefined"
      }}
  action:
    #    - service: notify.mobile_app_J16
    #      data:
    #        title: Debug FHP toggle
    #        message: >
    #          temp: {{ temp }},
    #          turn_on_below: {{ turn_on_below }},
    #          turn_off_above: {{ turn_off_above }},
    #          desired_state: {{ desired_state }}
    - choose:
      - conditions:
          condition: template
          value_template: >-
            {{ desired_state != 'undefined' and
               desired_state != states('switch.plug_floor_heating_pump')
            }}
        sequence:
          - service: "switch.turn_{{ desired_state }}"
            target:
              entity_id: switch.plug_floor_heating_pump
  mode: restart

# Run pump for 30 mins daily at night outside of the heating season,
# intended to keep the water flowing regularly.
- alias: "Floor Heating Pump Nightly Flush"
  id: floor-heating-pump-nightly-flush
  trigger:
    - platform: time
      at: '03:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: switch.plug_floor_heating_pump
        state: "off"
      # Proxy for "not in heating season":
      - condition: numeric_state
        entity_id: sensor.climate_living_room_temperature
        above: 22
  action:
    - service: automation.turn_off
      entity_id: automation.floor_heating_pump_toggle
    - service: switch.turn_on
      target:
        entity_id: switch.plug_floor_heating_pump
    - delay: '00:30:00'
    - service: switch.turn_off
      target:
        entity_id: switch.plug_floor_heating_pump
    - service: automation.turn_on
      entity_id: automation.floor_heating_pump_toggle
  mode: restart

- alias: "Alert Floor Heating Pump toggle possibly compromised"
  id: alert-floor-heating-pump-toggle
  trigger:
    - platform: time
      at: '07:00:00'
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: switch.plug_floor_heating_pump
          state: "off"
        - condition: numeric_state
          entity_id: sensor.climate_living_room_temperature
          below: input_number.living_room_temperature_target
  action:
    - service: notify.notify
      data:
        title: Floor Heating Pump
        message: Expected to be on due to low temperature, but is off
  mode: restart
