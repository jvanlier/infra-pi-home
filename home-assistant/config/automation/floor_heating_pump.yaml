- alias: "Floor Heating Pump toggle"
  id: floor-heating-pump-toggle
  trigger:
    - platform: template
      value_template: >-
        {{ (states('sensor.climate_living_room_temperature') | float(0)) >
           (states('input_number.living_room_temperature_target') +
            states('input_number.living_room_temperature_pump_offset') +
            states('input_number.living_room_temperature_pump_margin')
           )
        }}
    - platform: template
      value_template: >-
        {{ (states('sensor.climate_living_room_temperature') | float(0)) <
           (states('input_number.living_room_temperature_target') +
            states('input_number.living_room_temperature_pump_offset') -
            states('input_number.living_room_temperature_pump_margin')
           )
        }}
    # Fallback trigger, remove if we get enough comfort that numeric_state trigger does the job.
    # Used by to be every minute, but it led to a lot of spam in the Logbook.
    - platform: time_pattern
      hours: 1
    - platform: homeassistant
      event: start
  variables:
    target_plus_offset: >-
      {{ states('input_number.living_room_temperature_target') +
         states('input_number.living_room_temperature_pump_offset')
      }}
    margin: >-
      {{ states('input_number.living_room_temperature_pump_margin') }}
    temp: >-
      # The default of 0 makes the pump always go on if the sensor is dead, which is useful to
      # ensure continuation of service:
      {{ states('sensor.climate_living_room_temperature') | float(0) }}
    turn_on_below: "{{ target_plus_offset - margin }}"
    turn_off_above: "{{ target_plus_offset + margin }}"
    desired_state: >-
      {{ "on" if temp < turn_on_below else
         "off" if temp > turn_off_above else
         "undefined"
      }}
  action:
    - choose:
      - conditions:
          condition: template
          value_template: >-
            {{ desired_state != 'undefined' and
               desired_state != states('switch.plug_floor_heating_pump')
            }}
        sequence:
          - service: "switch.turn_{{ desired_state }}"
            target:
              entity_id: switch.plug_floor_heating_pump
  mode: restart

# Run pump for 30 mins daily at night outside of the heating season,
# intended to keep the water flowing regularly.
- alias: "Floor Heating Pump Nightly Flush"
  id: floor-heating-pump-nightly-flush
  trigger:
    - platform: time
      at: '03:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: switch.plug_floor_heating_pump
        state: "off"
      # Proxy for "not in heating season":
      - condition: numeric_state
        entity_id: sensor.climate_living_room_temperature
        above: 22
  action:
    - service: automation.turn_off
      entity_id: automation.floor_heating_pump_toggle
    - service: switch.turn_on
      target:
        entity_id: switch.plug_floor_heating_pump
    - delay: '00:30:00'
    - service: switch.turn_off
      target:
        entity_id: switch.plug_floor_heating_pump
    - service: automation.turn_on
      entity_id: automation.floor_heating_pump_toggle
  mode: restart

- alias: "Alert Floor Heating Pump toggle possibly compromised"
  id: alert-floor-heating-pump-toggle
  trigger:
    - platform: time
      at: '07:00:00'
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: switch.plug_floor_heating_pump
          state: "off"
        # Use this temp sensor in case Aqara sensor lost connection
        - condition: numeric_state
          entity_id: sensor.motion_hall_0_temperature
          below: 19
  action:
    - service: notify.notify
      data:
        title: Floor Heating Pump
        message: Expected to be on, but is off
  mode: restart
