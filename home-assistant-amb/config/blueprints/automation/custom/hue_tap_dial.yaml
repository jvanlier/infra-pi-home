blueprint:
  name: Hue Tap Dial for Zigbee2MQTT
  description: >
    Simple implementation for Hue Tap Dial for Zigbee2MQTT.
  domain: automation

  input:
    controller:
      name: (Zigbee2MQTT) Controller Name
      description: The name of the device in Zigbee2MQTT
    base_topic:
      name: Root/Base mqtt topic from Zigbee2MQTT
      description: The Root/base topic as configured in Zigbee2MQTT
      default: zigbee2mqtt

    button_1_press:
      name: Button 1 press
      description: Action for button 1 press
      default: []
      selector:
        action: {}
    button_2_press:
      name: Button 2 press
      description: Action for button 2 press
      default: []
      selector:
        action: {}
    button_3_press:
      name: Button 3 press
      description: Action for button 3 press
      default: []
      selector:
        action: {}
    button_4_press:
      name: Button 4 press
      description: Action for button 4 press
      default: []
      selector:
        action: {}
    brightness_step_down:
      name: Brightness step down
      description: Action for brightness step down
      default: []
      selector:
        action: {}
    brightness_step_up:
      name: Brightness step up
      description: Action for brightness step up
      default: []
      selector:
        action: {}

mode: restart

trigger_variables:
  base_topic: !input base_topic
  controller: !input controller

trigger:
  - platform: mqtt
    topic: "{{ base_topic ~ '/' ~ controller ~ '/action' }}"

# This condition is not strictly necessary, but it makes sure that the automation only triggers when there is a
# supported action. This makes for easier debugging etc.
condition:
  - condition: template
    value_template: "{{ trigger.payload in [
      'button_1_press',
      'button_2_press',
      'button_3_press',
      'button_4_press',
      'brightness_step_down',
      'brightness_step_up',
    ] }}"
    # Not implemented: press_release, hold, hold_release, dial_rotate_[left|right]_[slow|fast|step]

action:
  - variables:
      controller: !input controller
      command: "{{ trigger.payload }}"
  - choose:
      - conditions: '{{ command == "button_1_press" }}'
        sequence: !input button_1_press
      - conditions: '{{ command == "button_2_press" }}'
        sequence: !input button_2_press
      - conditions: '{{ command == "button_3_press" }}'
        sequence: !input button_3_press
      - conditions: '{{ command == "button_4_press" }}'
        sequence: !input button_4_press
      - conditions: '{{ command == "brightness_step_down" }}'
        sequence: !input brightness_step_down
      - conditions: '{{ command == "brightness_step_up" }}'
        sequence: !input brightness_step_up
