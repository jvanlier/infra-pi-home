blueprint:
  name: Hue Dimmer Switch (Z2M)
  description: >
    Minimal implementation for Hue Dimmer Switch (v1 & v2) for Zigbee2MQTT.

    For on/off buttons, it only supports press (unsupported: press_release, hold, hold_release).
    For brightness buttons, it only supports press and hold and uses the same action for both (unsupported: press_release, hold_release).

    Why? I don't find myself needing the other actions and I like the simplicity of having brightness press and hold
    do the same thing.

  domain: automation

  input:
    controller:
      name: (Zigbee2MQTT) Controller Name
      description: The name of the controller/Dimmer-Switch in Zigbee2MQTT (Not the name of your Home-Assistent Entity)
      default: ""
    base_topic:
      name: Root/Base mqtt topic from Zigbee2MQTT
      description: The Root/base topic as configured in Zigbee2MQTT (If you dont configured it you can leave the default --> "zigbee2mqtt")
      default: zigbee2mqtt

    on_press:
      name: Button on press
      description: Action for button 1 press
      default: []
      selector:
        action: {}
    off_press:
      name:  Off press
      description: Action for button off press
      default: []
      selector:
        action: {}
    up_press_or_hold:
      name: Up press or hold
      description: Action for button up press or hold
      default: []
      selector:
        action: {}
    down_press_or_hold:
      name: Down press or hold
      description: Action for button down press or hold
      default: []
      selector:
        action: {}

mode: restart

trigger_variables:
  base_topic: !input base_topic
  controller: !input controller

trigger:
  - platform: mqtt
    topic: "{{ base_topic ~ '/' ~ controller ~ '/action' }}"

# This condition is not strictly necessary, but it makes sure that the automation only triggers when there is a
# supported action. This makes for easier debugging etc.
condition:
  - condition: template
    value_template: "{{ trigger.payload in [
      'on_press',
      'off_press',
      'up_press',
      'up_hold',
      'down_press',
      'down_hold',
    ] }}"
    # Not implemented:
    # - on_press_release, on_hold, on_hold_release
    # - off_press_release, off_hold, off_hold_release
    # - up_press_release, up_hold_release
    # - down_press_release, down_hold_release

action:
  - variables:
      controller: !input controller
      command: "{{ trigger.payload }}"

  - choose:
      - conditions: '{{ command == "on_press" }}'
        sequence: !input on_press
      - conditions: '{{ command == "off_press" }}'
        sequence: !input off_press
      - conditions: '{{ command in ["up_press", "up_hold"] }}'
        sequence: !input up_press_or_hold
      - conditions: '{{ command in ["down_press", "down_hold"] }}'
        sequence: !input down_press_or_hold
