- alias: Heating study on when working
  id: heating-study-on-when-working
  trigger:
    - platform: numeric_state
      entity_id: sensor.plug_workstation_power
      above: &workstation_in_use_threshold_watt 60
  condition:
    - condition: time
      before: &off_time "21:00:00"
    - condition: state
      entity_id: sensor.at_least_one_person_home
      state: "yes"
  action:
    - service: climate.set_temperature
      data:
        temperature: &target_temp 20
      target:
        entity_id: climate.study
    # The next block activates Bedroom JC thermostat to heat up the Study if needed.
    # (Study thermostat does not activate heating, since it's just a smart radiator valve).
    # Radiators in Bedroom JC are generally off, so need to manually turn off the thermostat there when the temp has
    # been reached.
    - variables:
        study_target_temp: *target_temp
        bedroom_jc_initial_target_temp: "{{ state_attr('climate.bedroom_jc', 'temperature') }}"
        bedroom_jc_new_target_temp: "{{ state_attr('climate.bedroom_jc', 'current_temperature') | float(20) + 1.0 }}"
    - choose:
      - conditions:
          - alias: "Living thermostat not heating much"
            condition: numeric_state
            entity_id: sensor.living_heating
            below: 10  # percent
          - alias: "Study needs heating"
            condition: template
            value_template: "{{ state_attr('climate.study', 'current_temperature') < study_target_temp }}"
        sequence:
          - action: climate.set_temperature
            data:
              temperature: "{{ bedroom_jc_new_target_temp }}"
            target:
              entity_id: climate.bedroom_jc
          - alias: "Wait for study to reach target temp"
            wait_template: "{{ state_attr('climate.study', 'current_temperature') >= study_target_temp }}"
            timeout: "01:00:00"
          - action: climate.set_temperature
            data:
              temperature: "{{ bedroom_jc_initial_target_temp }}"
            target:
              entity_id: climate.bedroom_jc
  # Guarantee that automation finishes by using mode single, otherwise it may get restarted while waiting, potentially
  # leading to Bedroom JC thermostat never going back to its initial value:
  mode: single
  max_exceeded: silent

# This automation ensures that Study SRV can turn on again, after it was turned off by the turn-off automation (below),
# while the turn-on automation above was still running.
- alias: Heating study on when working - if running
  id: heating-study-on-when-working-if-running
  trigger:
    - platform: numeric_state
      entity_id: sensor.plug_workstation_power
      above: *workstation_in_use_threshold_watt
  variables:
    study_target_temp: *target_temp
  condition:
    - alias: "Only if turn-on automation is running/waiting"
      condition: template
      value_template: "{{ is_state_attr('automation.heating_study_on_when_working', 'current', '1') }}"
    - condition: time
      before: *off_time
    - condition: state
      entity_id: sensor.at_least_one_person_home
      state: "yes"
  action:
    - service: climate.set_temperature
      data:
        temperature: *target_temp
      target:
        entity_id: climate.study
  mode: restart

- alias: Heating study off
  id: heating-study-off
  trigger:
    - platform: numeric_state
      entity_id: sensor.plug_workstation_power
      below: 55
      for: "00:10:00"
    - platform: time
      at: *off_time
  action:
    - service: climate.set_temperature
      data:
        temperature: 16
      target:
        entity_id: climate.study
  mode: restart
